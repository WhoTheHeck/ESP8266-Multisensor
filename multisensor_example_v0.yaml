esphome:
  name: room_sensor
  platform: ESP8266
  board: nodemcuv2
  # arduino_version: 2.6.2

wifi:
  ssid: !secret ssidname
  password: !secret pswrd
  manual_ip:
    static_ip: xxxxxxxxxxxx
    gateway: xxxxxxxxxxxx
    subnet: xxxxxxxxxxxx
    dns1: xxxxxxxxxxxx
    dns2: xxxxxxxxxxxx

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "room-Senor Fallback Hotspot"
    password: "SdI0kd54Zpw0"

# Enable logging
logger:
					  
  logs:
    i2c: debug

# Enable Home Assistant API
api:

ota:

i2c:
  id: bus_a

globals:
  - id: iaq_index
    type: int
    restore_value: no
    initial_value: '0'

sensor:
#  - platform: adc
#    pin: A0
#    name: "room Input"
#    update_interval: 60s
  - platform: sht3xd
    # address: 0x44
    temperature:
      name: "room Temp"
      filters:
        - offset: -2.7  # was -1
      id: temp
    humidity:
      name: "room humidity"
      #filters:
        #- offset: +0.8
      id: humi
    update_interval: 60s
  - platform: ccs811
    eco2:
      name: "room eCO2"
      id: eco2
      filters:
      - lambda: |-
          if (x >= 50000) return 1;
          else return x;
    tvoc:
      name: "room TVOC"
      id: tvoc
      filters:  # filters high values that are reported after startup
      - lambda: |-
          if (x >= 50000) return 1;
          else return x;
    temperature: temp
    humidity: humi
    baseline: 0x7B7B
    # address: 0x5A
    update_interval: 60s
  - platform: wifi_signal
    name: "room Wifi"
    update_interval: 60s
  - platform: bh1750
    name: "room Helligkeit"
    id: brightness
    unit_of_measurement: lx
    # address: 0x23
    update_interval: 60s

binary_sensor:
  - platform: gpio
    pin: 12
    name: "room window"
    id: window
    device_class: window
    filters:
      - delayed_off: 500ms
      - delayed_on: 500ms
#  - platform: gpio
#    pin: 13
#    name: "room window 2"
#    id: window2
#    device_class: window
#    filters:
#      - delayed_off: 500ms
#      - delayed_on: 500ms
#  - platform: gpio
#    pin: 10
#    name: "room window 3"
#    id: window2
#    device_class: window
#    filters:
#      - delayed_off: 500ms
#      - delayed_on: 500ms
  - platform: gpio
    pin: 14
    name: "room Bewegung"
    id: motion
    device_class: motion
    filters:
      - delayed_off: 5s
    on_press:
      # order defines priority! low position == higher prio.
      - if:
          condition:
            and:
              - binary_sensor.is_on: motion
              - text_sensor.state:
                  id: airqual
                  state: "Excellent"
          then:
            - script.execute: ledgreen
      - if:
          condition:
            and:
              - binary_sensor.is_on: motion
              - text_sensor.state:
                  id: airqual
                  state: "Good"
          then:
            - script.execute: ledgreenish
      - if:
          condition:
            and:
              - binary_sensor.is_on: motion
              - sensor.in_range:
                  id: humi
                  above: 70
                  below: 100
          then:
            - script.execute: ledblue
      - if:
          condition:
            and:
              - binary_sensor.is_on: motion
              - text_sensor.state:
                  id: airqual
                  state: "Moderate"
          then:
            - script.execute: ledyellow
      - if:
          condition:
            and:
              - binary_sensor.is_on: motion
              - text_sensor.state:
                  id: airqual
                  state: "Poor"
          then:
            - script.execute: ledorange
      - if:
          condition:
            and:
              - binary_sensor.is_on: motion
              - text_sensor.state:
                  id: airqual
                  state: "Unhealty"
          then:
            - script.execute: ledred
  - platform: status
    name: "room ESP Status"

switch:
  - platform: restart
    name: "room ESP Restart"

text_sensor:
  # credit belongs to Bouke_Regnerus:
  # https://community.home-assistant.io/t/example-indoor-air-quality-text-sensor-using-ccs811-sensor/125854
  - platform: version
    name: "room ESPHome Version"
  - platform: template
    name: "room IAQ"
    id: airqual
    icon: "mdi:air-filter"
    lambda: |-
      id(iaq_index) = 0;
      /*
       * Transform indoor humidity values to IAQ points according to Indoor Air Quality UK: 
       * http://www.iaquk.org.uk/
      */
      if (id(humi).state < 10 or id(humi).state > 90) {
        id(iaq_index) += 1;
      }
      else if (id(humi).state < 20 or id(humi).state > 80) {
        id(iaq_index) += 2;
      }
      else if (id(humi).state < 30 or id(humi).state > 70) {
        id(iaq_index) += 3;
      }
      else if (id(humi).state < 40 or id(humi).state > 60) {
        id(iaq_index) += 4;
      }
      else if (id(humi).state >= 40 and id(humi).state <= 60) {
        id(iaq_index) += 5;
      }
      /*
       * Transform eCO2 values to IAQ points according to Indoor Air Quality UK: 
       * http://www.iaquk.org.uk/
      */
      if (id(eco2).state <= 600) {
        id(iaq_index) += 5;
      }
      else if (id(eco2).state <= 800) {
        id(iaq_index) += 4;
      }
      else if (id(eco2).state <= 1500) {
        id(iaq_index) += 3;
      }
      else if (id(eco2).state <= 1800) {
        id(iaq_index) += 2;
      }
      else if (id(eco2).state > 1800) {
        id(iaq_index) += 1;
      }
      /*
       * Transform TVOC values to IAQ points according to German environmental guidelines: 
       * https://www.repcomsrl.com/wp-content/uploads/2017/06/Environmental_Sensing_VOC_Product_Brochure_EN.pdf
      */
      if (id(tvoc).state <= 65) {
        id(iaq_index) += 5;
      }
      else if (id(tvoc).state <= 220) {
        id(iaq_index) += 4;
      }
      else if (id(tvoc).state <= 660) {
        id(iaq_index) += 3;
      }
      else if (id(tvoc).state <= 2200) {
        id(iaq_index) += 2;
      }
      else if (id(tvoc).state > 2200) {
        id(iaq_index) += 1;
      }
      /*
       * Transform IAQ index to human readable text according to Indoor Air Quality UK: 
       * http://www.iaquk.org.uk/
      */
      ESP_LOGD("main", "Current IAQ index %d", id(iaq_index));
      
      if (id(iaq_index) <= 6) {
        return {"Unhealty"};
      }
      else if (id(iaq_index) <= 9) {
        return {"Poor"};
      }
      else if (id(iaq_index) <= 12) {
        return {"Moderate"};
      }
      else if (id(iaq_index) <= 14) {
        return {"Good"};
      }
      else if (id(iaq_index) > 14) {
        return {"Excellent"};
      }
      return {};
    update_interval: 60s

light:
  - platform: fastled_clockless
    chipset: WS2812B
    pin: 3
    num_leds: 1
    rgb_order: RGB
    name: "room Status LED"
    id: statled
    effects:
      - random:
          name: "SlowRandom"
          transition_length: 30s
          update_interval: 30s
      - random:
          name: "FastRandom"
          transition_length: 4s
          update_interval: 5s
      - flicker:
          name: "Flicker"
          alpha: 95%
          intensity: 5%
# unsued:
  - platform: monochromatic
    name: "room Onboard LED"
    output: onboard_led
    id: led1
  - platform: monochromatic
    name: "room OnESP LED"
    output: onesp_led
    id: led2

# unused:
output:
  - platform: esp8266_pwm
    id: onboard_led
    pin:
      number: 16  # = D0
      inverted: true
  - platform: esp8266_pwm
    id: onesp_led
    pin:
      number: 2  # = D4
      inverted: true
   
script:
  - id: ledgreen
    then:
      - light.turn_on:
          id: statled
          brightness: 100%
          red: 0%
          green: 100%
          blue: 0%
          transition_length: 2s
      - delay: 4s
      - light.turn_off:
          id: statled
          transition_length: 2s
      - delay: 3s
      - light.turn_on:
          id: statled
          transition_length: 2s
      - delay: 4s
      - light.turn_off:
          id: statled
          transition_length: 2s
  - id: ledgreenish
    then:
      - light.turn_on:
          id: statled
          brightness: 100%
          red: 20%
          green: 80%
          blue: 0%
          transition_length: 2s
      - delay: 4s
      - light.turn_off:
          id: statled
          transition_length: 2s
      - delay: 3s
      - light.turn_on:
          id: statled
          transition_length: 2s
      - delay: 4s
      - light.turn_off:
          id: statled
          transition_length: 2s
  - id: ledyellow
    then:
      - light.turn_on:
          id: statled
          brightness: 100%
          red: 50%
          green: 50%
          blue: 0%
          transition_length: 2s
      - delay: 4s
      - light.turn_off:
          id: statled
          transition_length: 2s
      - delay: 3s
      - light.turn_on:
          id: statled
          transition_length: 2s
      - delay: 4s
      - light.turn_off:
          id: statled
          transition_length: 2s
  - id: ledorange
    then:
      - light.turn_on:
          id: statled
          brightness: 100%
          red: 70%
          green: 30%
          blue: 0%
          transition_length: 500ms
      - delay: 1s
      - light.turn_off:
          id: statled
          transition_length: 500ms
      - delay: 1s
      - light.turn_on:
          id: statled
          transition_length: 500ms
      - delay: 1s
      - light.turn_off:
          id: statled
          transition_length: 500ms
      - delay: 1s
      - light.turn_on:
          id: statled
          transition_length: 500ms
      - delay: 1s
      - light.turn_off:
          id: statled
          transition_length: 500ms
      - delay: 1s
      - light.turn_on:
          id: statled
          transition_length: 500ms
      - delay: 1s
      - light.turn_off:
          id: statled
          transition_length: 500ms
      - delay: 1s
      - light.turn_on:
          id: statled
          transition_length: 500ms
      - delay: 1s
      - light.turn_off:
          id: statled
          transition_length: 500ms
      - delay: 1s
      - light.turn_on:
          id: statled
          transition_length: 500ms
      - delay: 1s
      - light.turn_off:
          id: statled
          transition_length: 500ms
      - delay: 1s
      - light.turn_on:
          id: statled
          transition_length: 500ms
      - delay: 1s
      - light.turn_off:
          id: statled
          transition_length: 500ms
      - delay: 1s
      - light.turn_on:
          id: statled
          transition_length: 500ms
      - delay: 1s
      - light.turn_off:
          id: statled
          transition_length: 500ms
  - id: ledred
    then:
      - light.turn_on:
          id: statled
          brightness: 100%
          red: 100%
          green: 0%
          blue: 0%
          transition_length: 500ms
      - delay: 1s
      - light.turn_off:
          id: statled
          transition_length: 500ms
      - delay: 1s
      - light.turn_on:
          id: statled
          transition_length: 500ms
      - delay: 1s
      - light.turn_off:
          id: statled
          transition_length: 500ms
      - delay: 1s
      - light.turn_on:
          id: statled
          transition_length: 500ms
      - delay: 1s
      - light.turn_off:
          id: statled
          transition_length: 500ms
      - delay: 1s
      - light.turn_on:
          id: statled
          transition_length: 500ms
      - delay: 1s
      - light.turn_off:
          id: statled
          transition_length: 500ms
      - delay: 1s
      - light.turn_off:
          id: statled
          transition_length: 500ms
      - delay: 1s
      - light.turn_on:
          id: statled
          transition_length: 500ms
      - delay: 1s
      - light.turn_off:
          id: statled
          transition_length: 500ms
      - delay: 1s
      - light.turn_on:
          id: statled
          transition_length: 500ms
      - delay: 1s
      - light.turn_off:
          id: statled
          transition_length: 500ms
      - delay: 1s
      - light.turn_on:
          id: statled
          transition_length: 500ms
      - delay: 1s
      - light.turn_off:
          id: statled
          transition_length: 500ms
      - delay: 1s
      - light.turn_on:
          id: statled
          transition_length: 500ms
      - delay: 1s
      - light.turn_off:
          id: statled
          transition_length: 500ms
  - id: ledblue
    then:
      - light.turn_on:
          id: statled
          brightness: 100%
          red: 0%
          green: 0%
          blue: 100%
          transition_length: 2s
      - delay: 4s
      - light.turn_off:
          id: statled
          transition_length: 2s
      - delay: 3s
      - light.turn_on:
          id: statled
          transition_length: 2s
      - delay: 4s
      - light.turn_off:
          id: statled
          transition_length: 2s
